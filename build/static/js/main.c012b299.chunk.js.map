{"version":3,"sources":["components/Favorites/Favorites.js","actions/index.js","components/Buscador/Buscador.js","logo.png","components/NavBar/NavBar.js","components/Movie/Movie.js","App.js","serviceWorker.js","reducers/index.js","store/index.js","index.js"],"names":["ConnectedList","className","this","props","moviesFav","map","movie","src","Poster","alt","Title","to","id","style","color","title","onClick","removeMovieFavorite","Component","connect","state","moviesFavourites","dispatch","type","payload","Buscador","mostrar","bloquearFav","event","setState","target","value","preventDefault","getMovies","onSubmit","e","handleSubmit","autoComplete","onChange","handleChange","movies","imdbID","addMovieFavorite","moviesLoaded","titulo","fetch","then","response","json","NavBar","Logo","width","height","exact","Movie","movieId","match","params","getMovieDetail","detalles","Rated","Year","Plot","Director","BoxOffice","imdbRating","Genre","Awards","React","movieDetail","App","Fragment","path","component","Favorites","Boolean","window","location","hostname","initialState","rootReducer","action","concat","filter","Search","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c012b299.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Favorites.css\";\r\nimport { removeMovieFavorite } from \"../../actions\";\r\n\r\nexport class ConnectedList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"titulosFavoritos\">Pel√≠culas Favoritas</h2>\r\n        <ul className=\"ulBusqueda\">\r\n          {this.props.moviesFav &&\r\n            this.props.moviesFav.map((movie) => (\r\n              <div key={movie.title}>\r\n                <img\r\n                  className=\"imgBuscador\"\r\n                  src={movie.Poster}\r\n                  alt={movie.Title}\r\n                />\r\n                <Link to={`/movie/${movie.id}`}>\r\n                  <li style={{ color: \"white\" }}>{movie.title}</li>\r\n                </Link>\r\n                <button\r\n                  className=\"botonFavoritos color\"\r\n                  onClick={() =>\r\n                    this.props.removeMovieFavorite({\r\n                      id: movie.id,\r\n                    })\r\n                  }\r\n                >\r\n                  REMOVE\r\n                </button>\r\n              </div>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    moviesFav: state.moviesFavourites,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    removeMovieFavorite: (movie) => dispatch(removeMovieFavorite(movie)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedList);\r\n","export function addMovieFavorite(payload) {\r\n  return { type: \"ADD_MOVIE_FAVORITE\", payload };\r\n}\r\n\r\nexport function removeMovieFavorite(payload) {\r\n  return { type: \"REMOVE_MOVIE_FAVORITE\", payload };\r\n}\r\n\r\nexport function getMovieDetail(id) {\r\n  return function (dispatch) {\r\n    return fetch(\"http://www.omdbapi.com/?apikey=20dac387&i=\" + id)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({ type: \"GET_MOVIE_DETAIL\", payload: json });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getMovies(titulo) {\r\n  return function (dispatch) {\r\n    return fetch(\"http://www.omdbapi.com/?apikey=20dac387&s=\" + titulo)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({ type: \"GET_MOVIES\", payload: json });\r\n      });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Buscador.css\";\r\nimport { addMovieFavorite, getMovies } from \"../../actions\";\r\n\r\nexport class Buscador extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      mostrar: false,\r\n      bloquearFav: false,\r\n    };\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ ...this.state, title: event.target.value });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.getMovies(this.state.title);\r\n  }\r\n\r\n  render() {\r\n    const { title } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"contenedor\">\r\n          <h2 style={{ color: \"white\" }}> QUE PELICULA ESTAS BUSCANDO?</h2>\r\n          <form\r\n            className=\"form-container\"\r\n            onSubmit={(e) => {\r\n              this.handleSubmit(e);\r\n              this.setState({ ...this.state, mostrar: true });\r\n            }}\r\n          >\r\n            <div>\r\n              <input\r\n                className=\"inputBuscador\"\r\n                type=\"text\"\r\n                id=\"title\"\r\n                autoComplete=\"off\"\r\n                value={title}\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </div>\r\n            <button className=\"botonBuscador\" type=\"submit\">\r\n              BUSCAR\r\n            </button>\r\n          </form>\r\n        </div>\r\n        {this.state.mostrar && (\r\n          <ul className=\"ulBusqueda\">\r\n            {this.props.movies &&\r\n              this.props.movies.map((movie) => (\r\n                <div key={movie.imdbID}>\r\n                  <img\r\n                    className=\"imgBuscador\"\r\n                    src={movie.Poster}\r\n                    alt={movie.Title}\r\n                  />\r\n                  <Link to={`/movie/${movie.imdbID}`}>\r\n                    <li style={{ color: \"white\" }}>{movie.Title}</li>\r\n                  </Link>\r\n                  <button\r\n                    className=\"botonFavoritos\"\r\n                    onClick={() => {\r\n                      this.props.addMovieFavorite({\r\n                        title: movie.Title,\r\n                        id: movie.imdbID,\r\n                        Poster: movie.Poster,\r\n                      });\r\n                      this.setState({ ...this.state, bloquearFav: true });\r\n                    }}\r\n                  >\r\n                    Add Favorite\r\n                  </button>\r\n                </div>\r\n              ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    movies: state.moviesLoaded,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addMovieFavorite: (movie) => dispatch(addMovieFavorite(movie)),\r\n    getMovies: (title) => dispatch(getMovies(title)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Buscador);\r\n","export default __webpack_public_path__ + \"static/media/logo.9325c515.png\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Logo from \"../../logo.png\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <header className=\"navbar\">\r\n      <div>\r\n        <img\r\n          id=\"logoHenry\"\r\n          src={Logo}\r\n          width=\"50\"\r\n          height=\"50\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <nav>\r\n        <ul className=\"list\">\r\n          <li className=\"list-item\">\r\n            <NavLink exact to=\"/\">\r\n              Home\r\n            </NavLink>\r\n            <NavLink to=\"/favs\">Favoritas</NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMovieDetail } from \"../../actions/index\";\r\n\r\nimport \"./Movie.css\";\r\n\r\nclass Movie extends React.Component {\r\n  componentDidMount() {\r\n    const movieId = this.props.match.params.id;\r\n    this.props.getMovieDetail(movieId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"details\">\r\n          <div className=\"title\">\r\n            <h1>{this.props.detalles.Title}</h1>{\" \"}\r\n            <span>{this.props.detalles.Rated}</span>\r\n          </div>\r\n          <p className=\"a√±o\">{this.props.detalles.Year}</p>\r\n          <p className=\"description\">{this.props.detalles.Plot}</p>\r\n          <div className=\"container2 \">\r\n            <img\r\n              className=\"img\"\r\n              src={this.props.detalles.Poster}\r\n              alt={this.props.detalles.Title}\r\n            ></img>\r\n            <ul className=\"column\">\r\n              <li>Director: {this.props.detalles.Director}</li>\r\n              <li>BoxOffice: {this.props.detalles.BoxOffice}</li>\r\n              <li>imdbRating: {this.props.detalles.imdbRating}</li>\r\n              <li>Genero: {this.props.detalles.Genre}</li>\r\n              <li>Premios: {this.props.detalles.Awards}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    detalles: state.movieDetail,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getMovieDetail: (id) => dispatch(getMovieDetail(id)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Favorites from \"./components/Favorites/Favorites\";\r\nimport Buscador from \"./components/Buscador/Buscador\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Movie from \"./components/Movie/Movie\";\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar />\r\n      <Route exact path=\"/\" component={Buscador} />\r\n      <Route path=\"/favs\" component={Favorites} />\r\n      <Route path=\"/movie/:id\" component={Movie} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n  moviesFavourites: [],\r\n  moviesLoaded: [],\r\n  movieDetail: {},\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === \"ADD_MOVIE_FAVORITE\") {\r\n    return {\r\n      ...state,\r\n      moviesFavourites: state.moviesFavourites.concat(action.payload),\r\n    };\r\n  }\r\n  if (action.type === \"GET_MOVIE_DETAIL\") {\r\n    return {\r\n      ...state,\r\n      movieDetail: action.payload,\r\n    };\r\n  }\r\n  if (action.type === \"REMOVE_MOVIE_FAVORITE\") {\r\n    return {\r\n      ...state,\r\n      moviesFavourites: state.moviesFavourites.filter(\r\n        (movie) => movie.id !== action.payload.id\r\n      ),\r\n    };\r\n  }\r\n  if (action.type === \"GET_MOVIES\") {\r\n    return {\r\n      ...state,\r\n      moviesLoaded: action.payload.Search,\r\n    };\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/index\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}